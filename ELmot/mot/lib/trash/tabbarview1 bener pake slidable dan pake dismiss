
import 'package:flutter/material.dart';
import 'package:flutter_slidable/flutter_slidable.dart';
import 'package:provider/provider.dart';

import 'package:online_trading/helper/constant_style.dart';
import 'package:online_trading/module/model/orderbook_model.dart';
import '../../module/orderbook_pkg.dart';
import 'widgets_tabbar1/widget_loading.dart';
import 'widgets_tabbar1/widget_orderbookcard.dart';

class TabBarView1 extends StatelessWidget {
  const TabBarView1({super.key});

  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    return Provider(
      create: (context) => GetOrderBook().order,
      child: StreamBuilder<List<OrderBookModel>>(
          stream: GetOrderBook().fetchDataStream(),
          builder: (context, snapshot) {
            if (snapshot.hasData) {
              if (snapshot.data!.isEmpty) {
                return Padding(
                  padding: EdgeInsets.only(
                      top: size.height * 0.01,
                      left: size.width * 0.03,
                      right: size.width * 0.03),
                  child: ListView.builder(
                      itemBuilder: (context, index) => const LoadingWidget(),
                      itemCount: 9),
                );
              }
              List<OrderBookModel> orderbooklist =
                  snapshot.data!.cast<OrderBookModel>();
              return ListView.builder(
                  itemCount: orderbooklist.length,
                  itemBuilder: (context, index) {
                    return Padding(
                        padding: EdgeInsets.only(
                            top: size.height * 0.01,
                            left: size.width * 0.03,
                            right: size.width * 0.03),
                        child: Slidable(
                          endActionPane: ActionPane(
                            motion: const StretchMotion(),
                            children: [
                              SlidableAction(
                                flex: 1,
                                backgroundColor: Colors.red,
                                foregroundColor: Colors.white,
                                icon: Icons.delete_forever,
                                label: 'Remove',
                                onPressed: (BuildContext context) {
                                  showDialog(
                                      context: context,
                                      builder: (BuildContext context) {
                                        return AlertDialog(
                                          backgroundColor:
                                              ConstantStyle.foreground,
                                          title: const Text(
                                            "Attention!",
                                            style:
                                                TextStyle(color: Colors.white),
                                          ),
                                          content: const Text("Add Favorite",
                                              style: TextStyle(
                                                  color: Colors.white)),
                                          actions: <Widget>[
                                            ElevatedButton(
                                                style: ElevatedButton.styleFrom(
                                                    backgroundColor:
                                                        Colors.green),
                                                onPressed: () {},
                                                child: const Text("Submit")),
                                            ElevatedButton(
                                                style: ElevatedButton.styleFrom(
                                                    backgroundColor:
                                                        Colors.red),
                                                onPressed: () {
                                                  Navigator.of(context).pop();
                                                },
                                                child: const Text("Cancel"))
                                          ],
                                        );
                                      });
                                },
                              ),
                            ],
                          ),
                          child: WidgetOrderBookCard(
                            stockC: orderbooklist[index].stockC,
                            stockCL: orderbooklist[index].stockCL,
                            bidPrice:
                                orderbooklist[index].arrayOBID?[index].bidPrice,
                            bidVolume: orderbooklist[index]
                                .arrayOBID?[index]
                                .bidVolume,
                          ),
                        ));
                  });
            } else if (snapshot.hasError) {
              return const Center(
                child: Text(
                  "ERROR",
                  style: TextStyle(color: Colors.white),
                ),
              );
            } else if (snapshot.connectionState == ConnectionState.waiting) {
              return Padding(
                padding: EdgeInsets.only(
                    top: size.height * 0.01,
                    left: size.width * 0.03,
                    right: size.width * 0.03),
                child: ListView.builder(
                    itemBuilder: (context, index) => const LoadingWidget(),
                    itemCount: 9),
              );
            }
            return Padding(
              padding: EdgeInsets.only(
                  top: size.height * 0.01,
                  left: size.width * 0.03,
                  right: size.width * 0.03),
              child: ListView.builder(
                  itemBuilder: (context, index) => const LoadingWidget(),
                  itemCount: 9),
            );
          }),
    );
  }
}





// Menggunakan dismissable
// ===============================//

// ignore_for_file: unrelated_type_equality_checks

import 'package:flutter/material.dart';
import 'package:flutter_slidable/flutter_slidable.dart';
import 'package:provider/provider.dart';

import 'package:online_trading/helper/constant_style.dart';
import 'package:online_trading/module/model/orderbook_model.dart';
import '../../module/orderbook_pkg.dart';
import 'widgets_tabbar1/widget_loading.dart';
import 'widgets_tabbar1/widget_orderbookcard.dart';

class TabBarView1 extends StatelessWidget {
  const TabBarView1({super.key});

  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    return Provider(
      create: (context) => GetOrderBook().order,
      child: StreamBuilder<List<OrderBookModel>>(
          stream: GetOrderBook().fetchDataStream(),
          builder: (context, snapshot) {
            if (snapshot.hasData) {
              if (snapshot.data!.isEmpty) {
                return Padding(
                  padding: EdgeInsets.only(
                      top: size.height * 0.01,
                      left: size.width * 0.03,
                      right: size.width * 0.03),
                  child: ListView.builder(
                      itemBuilder: (context, index) => const LoadingWidget(),
                      itemCount: 9),
                );
              }
              List<OrderBookModel> orderbooklist =
                  snapshot.data!.cast<OrderBookModel>();

              return ListView.builder(
                  itemCount: orderbooklist.length,
                  itemBuilder: (context, index) {
                    final item = orderbooklist[index].stockC;
                    return Padding(
                        padding: EdgeInsets.only(
                            top: size.height * 0.01,
                            left: size.width * 0.03,
                            right: size.width * 0.03),
                        child: Dismissible(
                          key: Key(item!),
                          child: WidgetOrderBookCard(
                            stockC: orderbooklist[index].stockC,
                            stockCL: orderbooklist[index].stockCL,
                            bidPrice:
                                orderbooklist[index].arrayOBID?[index].bidPrice,
                            bidVolume: orderbooklist[index]
                                .arrayOBID?[index]
                                .bidVolume,
                          ),
                        ));
                  });
            } else if (snapshot.hasError) {
              return const Center(
                child: Text(
                  "ERROR",
                  style: TextStyle(color: Colors.white),
                ),
              );
            }
            return Padding(
              padding: EdgeInsets.only(
                  top: size.height * 0.01,
                  left: size.width * 0.03,
                  right: size.width * 0.03),
              child: ListView.builder(
                  itemBuilder: (context, index) => const LoadingWidget(),
                  itemCount: 9),
            );
          }),
    );
  }
}

 
    // StreamBuilder(
            //     stream: order().orderbooksStream(),
            //     builder: (context, snapshot) {
            //       if (snapshot.connectionState == ConnectionState.waiting) {
            //         return Padding(
            //           padding: EdgeInsets.only(top: size.height * 0.05),
            //           child: Center(
            //               child: CircularProgressIndicator(
            //                   color: Color.fromARGB(255, 163, 124, 8))),
            //         );
            //       } else if (snapshot.connectionState ==
            //               ConnectionState.active ||
            //           snapshot.connectionState == ConnectionState.done) {
            //         if (snapshot.hasError) {
            //           return const Center(
            //             child: Text(
            //               "Error",
            //               style: TextStyle(color: Colors.white),
            //             ),
            //           );
            //         } else if (snapshot.hasData) {
            //           List<OrderBookModel> orderbooklist =
            //               snapshot.data!.cast<OrderBookModel>();
            //           return SingleChildScrollView(
            //             child: SingleChildScrollView(
            //               child: Container(
            //                 margin: EdgeInsets.only(
            //                   left: size.width * 0.11,
            //                   top: size.height * 0.02,
            //                   right: size.width * 0.11,
            //                 ),
            //                 width: size.width * 1,
            //                 height: size.height * 0.696,
            //                 child: ListView.builder(
            //                     itemCount: orderbooklist.length,
            //                     itemBuilder: (context, index) {
            //                       return InkWell(
            //                         onTap: () {
            //                           Navigator.pushNamed(
            //                               context, '/maindetailsahamview');
            //                         },
            //                         child: Container(
            //                             padding: EdgeInsets.only(
            //                                 bottom: size.height * 0.025),
            //                             child: Row(
            //                               mainAxisAlignment:
            //                                   MainAxisAlignment.spaceBetween,
            //                               children: [
            //                                 Row(
            //                                   children: [
            //                                     Row(
            //                                       children: [
            //                                         ClipRRect(
            //                                           borderRadius:
            //                                               BorderRadius.circular(
            //                                                   15.0), //or 15.0
            //                                           child: Container(
            //                                             height: size.height *
            //                                                 0.06,
            //                                             width:
            //                                                 size.width * 0.12,
            //                                             color: const Color(
            //                                                 0xffFF0E58),
            //                                             child: const Icon(
            //                                                 Icons.volume_up,
            //                                                 color:
            //                                                     Colors.white,
            //                                                 size: 30.0),
            //                                           ),
            //                                         ),
            //                                         Padding(
            //                                           padding: EdgeInsets.only(
            //                                               left: size.width *
            //                                                   0.03,
            //                                               bottom:
            //                                                   size.height *
            //                                                       0.02),
            //                                           child: Column(
            //                                             mainAxisAlignment:
            //                                                 MainAxisAlignment
            //                                                     .start,
            //                                             crossAxisAlignment:
            //                                                 CrossAxisAlignment
            //                                                     .start,
            //                                             children: [
            //                                               Text(
            //                                                 "${orderbooklist[index].stockC}",
            //                                                 style: const TextStyle(
            //                                                     color: Colors
            //                                                         .white,
            //                                                     fontWeight:
            //                                                         FontWeight
            //                                                             .bold,
            //                                                     fontSize: 18),
            //                                               ),
            //                                               const Text(
            //                                                 "Subscription",
            //                                                 style: TextStyle(
            //                                                     color: Colors
            //                                                         .white,
            //                                                     fontSize: 12),
            //                                               )
            //                                             ],
            //                                           ),
            //                                         )
            //                                       ],
            //                                     ),
            //                                     SizedBox(
            //                                       width: size.width * 0.2,
            //                                     ),
            //                                     Padding(
            //                                       padding: EdgeInsets.only(
            //                                           bottom:
            //                                               size.height * 0.02),
            //                                       child: Column(
            //                                         mainAxisAlignment:
            //                                             MainAxisAlignment.end,
            //                                         crossAxisAlignment:
            //                                             CrossAxisAlignment
            //                                                 .end,
            //                                         children: [
            //                                           if (orderbooklist[index]
            //                                                   .arrayOBID?[
            //                                                       index]
            //                                                   .bidPrice ==
            //                                               0)
            //                                             Text(
            //                                               "${orderbooklist[index].arrayOBID?[index].bidPrice.toString()}",
            //                                               // "${orderbooklist[index].arrayOOffer?[index].offerPrice}",
            //                                               style: const TextStyle(
            //                                                   color: Colors
            //                                                       .green,
            //                                                   fontWeight:
            //                                                       FontWeight
            //                                                           .bold,
            //                                                   fontSize: 18),
            //                                             ),
            //                                           const Text(
            //                                             "24 Jun 2023",
            //                                             style: TextStyle(
            //                                                 color:
            //                                                     Colors.white,
            //                                                 fontSize: 12),
            //                                           )
            //                                         ],
            //                                       ),
            //                                     )
            //                                   ],
            //                                 ),
            //                               ],
            //                             )),
            //                       );
            //                     }),
            //               ),
            //             ),
            //           );
            //         } else {
            //           return Center(
            //             child: Text(
            //               "Error",
            //               style: TextStyle(color: Colors.white),
            //             ),
            //           );
            //         }
            //       }
            //       return Center(
            //         child: Text(
            //           "Error",
            //           style: TextStyle(color: Colors.white),
            //         ),
            //       );
            //     }),


            
          // Row(
          //   mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          //   children: [
          //     // Container(
          //     //   width: size.width * 0.8,
          //     //   height: size.height * 0.06,
          //     //   decoration: BoxDecoration(
          //     //     color: backgroundwidget,
          //     //     borderRadius: BorderRadius.circular(12),
          //     //   ),
          //     //   child: Padding(
          //     //     padding: EdgeInsets.only(left: size.width * 0.05),
          //     //     child: Row(
          //     //       mainAxisAlignment: MainAxisAlignment.start,
          //     //       children: [
          //     //         const Icon(
          //     //           Icons.search,
          //     //           color: Color.fromARGB(255, 116, 116, 121),
          //     //         ),
          //     //         Padding(
          //     //             padding: EdgeInsets.only(
          //     //                 left: size.width * 0.02),
          //     //             child: SizedBox(
          //     //               width: size.width * 0.65,
          //     //               child: TextField(
          //     //                 onTap: () {
          //     //                   setState(() {
          //     //                     _onsear = true;
          //     //                   });
          //     //                 },
          //     //                 controller: cari,
          //     //                 onChanged: (value) {},
          //     //                 cursorColor: ConstantStyle.oren,
          //     //                 style: TextStyle(
          //     //                   color: Colors.white,
          //     //                   fontSize: size.width * 0.045,
          //     //                 ),
          //     //                 decoration: const InputDecoration(
          //     //                   focusedBorder: InputBorder.none,
          //     //                   enabledBorder: InputBorder.none,
          //     //                   errorBorder: InputBorder.none,
          //     //                   disabledBorder: InputBorder.none,
          //     //                 ),
          //     //               ),
          //     //             ))
          //     //       ],
          //     //     ),
          //     //   ),
          //     // ),
          //     Container(
          //       width: size.width * 0.13,
          //       height: size.height * 0.06,
          //       decoration: BoxDecoration(
          //         color: ConstantStyle.oren,
          //         borderRadius: BorderRadius.circular(12),
          //       ),
          //       child: IconButton(
          //         icon: const Icon(
          //           Icons.search,
          //           color: Colors.white,
          //         ),
          //         onPressed: () {
          //           Navigator.pushNamed(context, '/searchview');
          //         },
          //       ),
          //     ),
          //   ],
          // ),
          // if (_onsear == true && searchText.isNotEmpty)
          // Expanded(
          //   child: ListView.builder(
          //     itemCount: getFilteredSuggestions(searchText).length,
          //     itemBuilder: (context, index) {
          //       final suggestion = getFilteredSuggestions(searchText)[index];
          //       return ListTile(
          //         title: Text(
          //           suggestion,
          //           style: const TextStyle(color: Colors.white),
          //         ),
          //         onTap: () {
          //           setState(() {
          //             searchText = suggestion;
          //             cari.text = suggestion;
          //             _onsear = false;
          //           });
          //         },
          //       );
          //     },
          //   ),
          // ),
          // if (searchText.isEmpty)

          
    // return Provider(
    //   create: (context) => ObjectBoxDatabase.orderBookBox
    //       .getAll()
    //       .sort((a, b) => b.lastUpdated!.compareTo(a.lastUpdated!.toInt())),
    //   child: StreamBuilder<List<OrderBook>>(
    //       stream: ObjectBoxDatabase.orderBookRealtime(),
    //       builder: (context, snapshot) {
    //         if (snapshot.hasData) {
    //           if (snapshot.data!.isEmpty) {




      
                // Get.defaultDialog(
                //     backgroundColor: putihop85,
                //     title: '$type\nConfirmation',
                //     titleStyle: TextStyle(
                //         color: type == 'BUY' ? Colors.red : Colors.green,
                //         fontWeight: FontWeight.bold,
                //         fontSize: 16.sp),
                //     cancel: GestureDetector(
                //       onTap: () => Navigator.of(context).pop(),
                //       child: Container(
                //         width: 70.w,
                //         height: 30.h,
                //         decoration: BoxDecoration(
                //           borderRadius: BorderRadius.circular(5.r),
                //           color: Colors.red,
                //         ),
                //         alignment: AlignmentDirectional.center,
                //         child: Text(
                //           'Cancel',
                //           style: TextStyle(
                //               color: Colors.black, fontSize: FontSizes.size12),
                //         ),
                //       ),
                //     ),
                //     confirm: GestureDetector(
                //       onTap: () {
                //         contollerBuilding.building.value.stockCode =
                //             getLimit.stockCode.value;
                //         contollerBuilding.building.value.volume = int.parse(
                //               bodyControl.qtyController.text.replaceAll(
                //                 RegExp(r','),
                //                 '',
                //               ),
                //             ) *
                //             Get.find<LoginOrderController>().order!.value.lot!;
                //         contollerBuilding.building.value.price = int.parse(
                //           bodyControl.priceController.value.text.replaceAll(
                //             RegExp(r','),
                //             '',
                //           ),
                //         );
                //         contollerBuilding.building.value.board =
                //             Get.find<ControllerBoard>().boards == 'RG' ? 0 : 1;
                //         contollerBuilding.building.value.pin =
                //             int.parse(Get.find<PinSave>().pin.value);
                //         contollerBuilding.building.value.command =
                //             type == 'BUY' ? 0 : 1;
                //         contollerBuilding.building.value.prevSameOrder =
                //             bodyControl.sameOrder.value == false ? 0 : 1;
                //         contollerBuilding.building.value.rendomSplit =
                //             bodyControl.randomSlit.value == false ? 0 : 1;
                //         contollerBuilding.building.value.nSplit =
                //             int.parse(bodyControl.splitTo.value.text);
                //         contollerBuilding.building.value.activPriceStep =
                //             bodyControl.aPriceStap.value == false ? 0 : 1;
                //         contollerBuilding.building.value.command =
                //             int.parse(bodyControl.autoPrice.value.text);
                //         bodyControl.aOrder.value == false ? 0 : 1;
                //         contollerBuilding.building.value.command =
                //             int.parse(bodyControl.priceStap.value.text);
                //         contollerBuilding.building.refresh();
                //         contollerBuilding.see();
                //         Navigator.of(context).pop();
                //       },
                //       child: Container(
                //         width: 70.w,
                //         height: 30.h,
                //         decoration: BoxDecoration(
                //           borderRadius: BorderRadius.circular(5.r),
                //           color: Colors.blue,
                //         ),
                //         alignment: AlignmentDirectional.center,
                //         child: Text(
                //           'Confirm',
                //           style: TextStyle(
                //               color: Colors.black, fontSize: FontSizes.size12),
                //         ),
                //       ),
                //     ),
                //     content: SizedBox(
                //       height: 0.3.sh,
                //       child: Table(
                //         border: TableBorder.all(),
                //       ),
                //     )
                //     //  Column(
                //     //   children: [
                //     //     Text(
                //     //       '${getLimit.stockCode.value} - ${ObjectBoxDatabase.stockList.query(PackageStockList_.stcokCode.equals(getLimit.stockCode.value)).build().findFirst()!.stockName!}',
                //     //       style: TextStyle(
                //     //         fontWeight: FontWeight.bold,
                //     //         fontSize: FontSizes.size13,
                //     //       ),
                //     //       textAlign: TextAlign.center,
                //     //       maxLines: 2,
                //     //     ),
                //     //     SizedBox(
                //     //       height: 3.h,
                //     //     ),
                //     //     SizedBox(
                //     //       width: 0.5.sw,
                //     //       child: Row(
                //     //         mainAxisAlignment: MainAxisAlignment.center,
                //     //         children: [
                //     //           Text(
                //     //             'Market: ',
                //     //             style: TextStyle(
                //     //               fontWeight: FontWeight.bold,
                //     //               fontSize: FontSizes.size12,
                //     //             ),
                //     //           ),
                //     //           Text(
                //     //             Get.find<ControllerBoard>().boards.value == 'RG'
                //     //                 ? 'Regular Market'
                //     //                 : 'Cash Market',
                //     //             style: TextStyle(
                //     //               fontWeight: FontWeight.bold,
                //     //               fontSize: FontSizes.size12,
                //     //             ),
                //     //           ),
                //     //         ],
                //     //       ),
                //     //     ),
                //     //     SizedBox(
                //     //       height: 10.h,
                //     //     ),
                //     //     Row(
                //     //       children: [
                //     //         Expanded(
                //     //           child: Row(
                //     //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
                //     //             children: [
                //     //               Text(
                //     //                 'Price: ',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //               Text(
                //     //                 bodyControl.priceController.text,
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //             ],
                //     //           ),
                //     //         ),
                //     //         SizedBox(
                //     //           width: 0.025.sw,
                //     //         ),
                //     //         Expanded(
                //     //           child: Row(
                //     //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
                //     //             children: [
                //     //               Text(
                //     //                 'Volume: ',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //               Text(
                //     //                 bodyControl.qtyController.text,
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //             ],
                //     //           ),
                //     //         ),
                //     //       ],
                //     //     ),
                //     //     SizedBox(
                //     //       height: 3.h,
                //     //     ),
                //     //     Row(
                //     //       mainAxisAlignment: MainAxisAlignment.start,
                //     //       children: [
                //     //         Text(
                //     //           'Prevent Same Order: ',
                //     //           style: TextStyle(
                //     //             fontWeight: FontWeight.bold,
                //     //             fontSize: FontSizes.size10,
                //     //           ),
                //     //         ),
                //     //         Text(
                //     //           bodyControl.sameOrder.value ? 'Active' : 'Inactive',
                //     //           style: TextStyle(
                //     //             fontWeight: FontWeight.bold,
                //     //             fontSize: FontSizes.size10,
                //     //             color: bodyControl.sameOrder.value
                //     //                 ? Colors.green
                //     //                 : Colors.red,
                //     //           ),
                //     //         ),
                //     //       ],
                //     //     ),
                //     //     SizedBox(
                //     //       height: 3.h,
                //     //     ),
                //     //     const Divider(
                //     //       color: Colors.black,
                //     //     ),
                //     //     SizedBox(
                //     //       width: 3.h,
                //     //     ),
                //     //     Row(
                //     //       children: [
                //     //         Expanded(
                //     //           child: Row(
                //     //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
                //     //             children: [
                //     //               Text(
                //     //                 'Rendomize Split: ',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //               Text(
                //     //                 bodyControl.randomSlit.value
                //     //                     ? 'Active'
                //     //                     : 'Inactive',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                   color: bodyControl.randomSlit.value
                //     //                       ? Colors.green
                //     //                       : Colors.red,
                //     //                 ),
                //     //               ),
                //     //             ],
                //     //           ),
                //     //         ),
                //     //         SizedBox(
                //     //           width: 0.025.sw,
                //     //         ),
                //     //         Expanded(
                //     //           child: Row(
                //     //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
                //     //             children: [
                //     //               Text(
                //     //                 'Split To: ',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //               Text(
                //     //                 bodyControl.splitTo.text,
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //             ],
                //     //           ),
                //     //         ),
                //     //       ],
                //     //     ),
                //     //     SizedBox(
                //     //       height: 3.h,
                //     //     ),
                //     //     Row(
                //     //       children: [
                //     //         Expanded(
                //     //           child: Row(
                //     //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
                //     //             children: [
                //     //               Text(
                //     //                 'Active PriceStap: ',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //               Text(
                //     //                 bodyControl.aPriceStap.value
                //     //                     ? 'Active'
                //     //                     : 'Inactive',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                   color: bodyControl.aPriceStap.value
                //     //                       ? Colors.green
                //     //                       : Colors.red,
                //     //                 ),
                //     //               ),
                //     //             ],
                //     //           ),
                //     //         ),
                //     //         SizedBox(
                //     //           width: 0.025.sw,
                //     //         ),
                //     //         Expanded(
                //     //           child: Row(
                //     //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
                //     //             children: [
                //     //               Text(
                //     //                 'PriceStap: ',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //               Text(
                //     //                 bodyControl.priceStap.text,
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //             ],
                //     //           ),
                //     //         ),
                //     //       ],
                //     //     ),
                //     //     SizedBox(
                //     //       height: 3.h,
                //     //     ),
                //     //     Row(
                //     //       children: [
                //     //         Expanded(
                //     //           child: Row(
                //     //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
                //     //             children: [
                //     //               Text(
                //     //                 'Active Auto ${type == 'BUY' ? 'SELL' : "BUY"}: ',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //               Text(
                //     //                 bodyControl.aOrder.value
                //     //                     ? 'Active'
                //     //                     : 'Inactive',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                   color: bodyControl.aOrder.value
                //     //                       ? Colors.green
                //     //                       : Colors.red,
                //     //                 ),
                //     //               ),
                //     //             ],
                //     //           ),
                //     //         ),
                //     //         SizedBox(
                //     //           width: 0.025.sw,
                //     //         ),
                //     //         Expanded(
                //     //           child: Row(
                //     //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
                //     //             children: [
                //     //               Text(
                //     //                 'AutoMatic ${type == 'BUY' ? 'SELL' : "BUY"}: ',
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //               Text(
                //     //                 bodyControl.autoPrice.text,
                //     //                 style: TextStyle(
                //     //                   fontWeight: FontWeight.bold,
                //     //                   fontSize: FontSizes.size10,
                //     //                 ),
                //     //               ),
                //     //             ],
                //     //           ),
                //     //         ),
                //     //       ],
                //     //     ),
                //     //     SizedBox(
                //     //       height: 20.h,
                //     //     ),
                //     //     SizedBox(
                //     //       height: 0.25.sw,
                //     //       child: MainTable(
                //     //         header: [
                //     //           HeaderModel(
                //     //             label: Text(
                //     //               'Estimation',
                //     //               style: TextStyle(
                //     //                 color: Colors.white,
                //     //                 fontSize: FontSizes.size10,
                //     //                 fontWeight: FontWeight.bold,
                //     //               ),
                //     //             ),
                //     //             alignment: Alignment.center,
                //     //           ),
                //     //           HeaderModel(
                //     //             label: Text(
                //     //               'Transaction Fee',
                //     //               style: TextStyle(
                //     //                 color: Colors.white,
                //     //                 fontSize: FontSizes.size10,
                //     //                 fontWeight: FontWeight.bold,
                //     //               ),
                //     //             ),
                //     //             alignment: Alignment.center,
                //     //           ),
                //     //           HeaderModel(
                //     //             label: Text(
                //     //               'Nett',
                //     //               style: TextStyle(
                //     //                 color: Colors.white,
                //     //                 fontSize: FontSizes.size10,
                //     //                 fontWeight: FontWeight.bold,
                //     //               ),
                //     //             ),
                //     //             alignment: Alignment.center,
                //     //           ),
                //     //         ],
                //     //         body: [
                //     //           BodyModel(
                //     //             body: [
                //     //               Text(
                //     //                 formattaCurrun(bodyControl.stockEstimasi()),
                //     //                 style: TextStyle(
                //     //                   color: Colors.black.withOpacity(0.8),
                //     //                   fontSize: FontSizes.size10,
                //     //                   fontWeight: FontWeight.bold,
                //     //                 ),
                //     //                 textAlign: TextAlign.right,
                //     //               ),
                //     //               Text(
                //     //                 formattaCurrun(bodyControl
                //     //                     .fee(type == 'BUY' ? true : false)),
                //     //                 style: TextStyle(
                //     //                   color: Colors.red,
                //     //                   fontSize: FontSizes.size10,
                //     //                   fontWeight: FontWeight.bold,
                //     //                 ),
                //     //                 textAlign: TextAlign.right,
                //     //               ),
                //     //               Text(
                //     //                 formattaCurrun(bodyControl
                //     //                     .nett(type == 'BUY' ? true : false)),
                //     //                 style: TextStyle(
                //     //                   color: type == 'BUY'
                //     //                       ? Colors.red
                //     //                       : Colors.green,
                //     //                   fontSize: FontSizes.size10,
                //     //                   fontWeight: FontWeight.bold,
                //     //                 ),
                //     //                 textAlign: TextAlign.right,
                //     //               ),
                //     //             ],
                //     //           ),
                //     //         ],
                //     //       ),
                //     //     ),
                //     //   ],
                //     // ),
                //     );